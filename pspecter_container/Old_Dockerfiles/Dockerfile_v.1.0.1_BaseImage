## David Degnan, Pacific Northwest National Labs
## Last Updated: 2021_04_01
## PSpecteR BASE IMAGE Version: 1.0.1
## Tag: pspecterbase:1.0.1

# Install R Version 4.0.4
FROM rocker/shiny:4.0.4

# Install Ubuntu Dependencies
RUN apt-get update && apt-get install -y \
    sudo \
    pandoc \
    pandoc-citeproc \
    libcurl4-gnutls-dev \
    libcairo2-dev \
    libxt-dev \ 
    libssl-dev \
    libssh2-1-dev \
    libxml2-dev \ 
    libnetcdf-dev \
    libnetcdff-dev \
    build-essential \
    chrpath \
    libxft-dev \ 
    libfreetype6-dev \ 
    libfreetype6 \ 
    libfontconfig1-dev \
    libfontconfig1 \
    mono-devel

# Install packages from package install script 
COPY Install_Packages_Linux.R /srv/shiny/
WORKDIR /srv/shiny/
RUN Rscript "Install_Packages_Linux.R" 

# Install Packages for mzR 
RUN Rscript -e "install.packages(c('ncdf4', 'devtools'), repos = 'https://cran.rstudio.com')"
RUN Rscript -e "BiocManager::install('mzR', update = TRUE, ask = FALSE)"

# Install Packages for MSnbase
RUN Rscript -e "install.packages(c('MALDIquant', 'futile.logger', 'snow', 'doParallel', 'foreach', 'iterators'), repos = 'https://cran.rstudio.com')"
RUN Rscript -e "BiocManager::install(c('BiocParallel', 'mzID', 'MSnbase'), update = TRUE, ask = FALSE)"

# Install packages for rhdf5
RUN Rscript -e "BiocManager::install('rhdf5', update = TRUE, ask = FALSE)"

# Install packages for BRAIN
RUN Rscript -e "install.packages('PolynomF', repos = 'https://cran.rstudio.com')"
RUN Rscript -e "BiocManager::install('BRAIN', update = TRUE, ask = FALSE)"

# Install packages for Rdisop
RUN Rscript -e "BiocManager::install('Rdisop', update = TRUE, ask = FALSE)"

# Install rawDiag separately
RUN Rscript -e "install.packages('http://fgcz-ms.uzh.ch/~cpanse/rawDiag_0.0.38.tar.gz', repo = NULL)"

# Install reshape2 separately
RUN Rscript -e "install.packages('https://cran.r-project.org/src/contrib/Archive/reshape2/reshape2_1.4.3.tar.gz')"

# Install Phantom JS
RUN wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
RUN tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 -C /usr/local/share/
RUN ln -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/

# Copy configuration files into the Docker image
#COPY app.R /srv/shiny-server/
#COPY Glossary /srv/shiny-server/Glossary
#COPY Licenses /srv/shiny-server/Licenses
#COPY Server /srv/shiny-server/Server
#COPY www /srv/shiny-server/www
#COPY data /data
#COPY SetEnvironment.csv /SetEnvironment.csv
#COPY TestFiles /TestFiles

# Make the ShinyApp available at port 3838
#EXPOSE 3838

# Allow permission
#RUN sudo chown -R shiny:shiny /srv/shiny-server /data

#CMD ["/usr/bin/shiny-server.sh"]
